DROP DATABASE IF EXISTS boston_mas;
CREATE DATABASE boston_mas;
USE boston_mas;



CREATE TABLE customer(
id					INT unsigned NOT NULL AUTO_INCREMENT,
CUS_NAME 			VARCHAR(100) NOT NULL,
ACCT_BALANCE		INT CHECK (ACCT_BALANCE > 1000 AND ACCT_BALANCE < 500000),
PRIMARY KEY			(id)
);

CREATE TABLE article(
ID_ARTICLE			INT unsigned NOT NULL AUTO_INCREMENT,
ART_NAME 			VARCHAR(100) NOT NULL,
FACTORY				INT unsigned NOT NULL,
STOCK_LEVEL			INT,
DESCRIPTION			VARCHAR(100) NOT NULL,
PRIMARY KEY			(ID_ARTICLE)
);


CREATE TABLE orders(
ID_ORDERS			INT unsigned NOT NULL AUTO_INCREMENT,
CUS_ID				INT unsigned NOT NULL,
SHIPPING_ADDRESS		VARCHAR(100) NOT NULL,
SALES_DATE			DATE,
UNITS				INT,
PRIMARY KEY			(ID_ORDERS)
);

CREATE TABLE factory(
ID_FACTORY			INT unsigned NOT NULL AUTO_INCREMENT,
NAME 				VARCHAR(100) NOT NULL,
ARTICLE_FAC			VARCHAR(100) NOT NULL,
WEBSITE				VARCHAR(100) NOT NULL,
DECRIPTION			VARCHAR(100) NOT NULL,
PHONE				INT,
PRIMARY KEY			(ID_FACTORY)
);


CREATE TABLE article_order(
ID_ARTICLE_ORDER	INT unsigned NOT NULL AUTO_INCREMENT,
ID_ARTICLE			INT unsigned NOT NULL,
ID_ORDERS			INT unsigned NOT NULL,
PRIMARY KEY			(ID_ARTICLE_ORDER)
);


CREATE TABLE address(
ID_ADDRESS			INT unsigned NOT NULL AUTO_INCREMENT,
CUSTOMER_ID			INT unsigned NOT NULL,
STREET_NUMBER		INT,
STREET				VARCHAR(100) NOT NULL,
CITY				VARCHAR(100) NOT NULL,
ZIPCODE				CHAR(5)  NOT NULL,
PRIMARY KEY			(ID_ADDRESS)
);

ALTER TABLE address 
ADD CONSTRAINT CK_ZIPCODE 
CHECK ( ZIPCODE LIKE  ('[0-9][0-9][0-9][0-9][0-9]'));



ALTER TABLE article ADD CONSTRAINT FK_articleFactory FOREIGN KEY (FACTORY) REFERENCES factory(ID_FACTORY);
ALTER TABLE orders ADD CONSTRAINT FK_ordersCustomer FOREIGN KEY (CUS_ID) REFERENCES customer(id);
ALTER TABLE article_order ADD CONSTRAINT FK_article_orderArticle FOREIGN KEY (ID_ARTICLE) REFERENCES article(ID_ARTICLE);
ALTER TABLE article_order ADD CONSTRAINT FK_article_orderOrders FOREIGN KEY (ID_ORDERS) REFERENCES orders(ID_ORDERS);
ALTER TABLE address ADD CONSTRAINT FK_addressCustomer FOREIGN KEY (CUSTOMER_ID) REFERENCES customer(id);






